name: Integration

on:
  workflow_call:
    inputs:
      node-version:
        required: true
        type: string

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports:
          - 5432:5432
        options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      NODE_ENV: test
      ENABLE_CORS: true
      PORT: 3000
      DATABASE_PORT: 5432
      POSTGRES_DB: test
      POSTGRES_PASSWORD: test
      POSTGRES_USER: test
      POSTGRES_HOST: postgres
      JWT_SECRET: c55347bb633ce8d0f4824b017f70ddb0e0336b789a5dbf7449b54af155eaf973
      JWT_REFRESH_SECRET: c08f7fd6b67152afac129cd5162959ec52576603a0d253c4b2a447dd8972f551
      ACCESS_TOKEN_EXPIRATION: 1d
      REFRESH_TOKEN_EXPIRATION: 1y

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm i

      - name: Run all unit Test And Coverage
        run: npm run test:cov

      # - name: Run Integration Test
      #   run: npm run test:integration

      - name: Run E2E Test
        run: npm run test:e2e

      - name: Upload Coverage Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-repport
          path: coverage
          retention-days: 3
          include-hidden-files: true

  # Quality:
  #   needs: [Tests]
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: backend

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: SonarCloud
  #       uses: SonarSource/sonarcloud-github-action@v3.1.0
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACK }}

  # QualityFront:
  #   needs: [Backend, Frontend]
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: frontend

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: SonarCloud
  #       uses: SonarSource/sonarcloud-github-action@v3.1.0
  #       with:
  #         projectBaseDir: ./frontend
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}

  # DockerBuild:
  #   if: ${{ github.event_name == 'push'}}
  #   permissions:
  #     contents: read
  #     packages: write
  #   uses: ./.github/workflows/docker_ghcr.yml
  #   secrets: inherit

  # Canary:
  #   if: ${{ github.event_name == 'push' }}
  #   needs: [DockerBuild]
  #   uses: ./.github/workflows/canary_server.yml
  #   secrets: inherit

  # Production:
  #   if: ${{ github.event_name == 'push' && contains(github.event.head_commit.message, '#production')}}
  #   needs: [DockerBuild]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: echo PRODUTION
